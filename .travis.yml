---
language: python

sudo: required

services:
  - docker

branches:
  only:
    - master

env:
  global:
    # Software versions
    - TERRAFORM_VERSION=0.11.10
    - YAMLLINT_VERSION=1.8.1
    - TERRAFORM_PROVIDER_RKE_VERSION=0.5.0
    # SSH
    - TF_VAR_ssh_key="ssh_key"
    - TF_VAR_ssh_key_pub="ssh_key.pub"
    # OpenStack environment
    - OS_AUTH_URL="https://pouta.csc.fi:5001/v3"
    - OS_PROJECT_ID="glenna"
    - OS_PROJECT_NAME="glenna"
    - OS_USER_DOMAIN_NAME="Default"
    - OS_USERNAME="marca"
    - OS_REGION_NAME="regionOne"
    - OS_IDENTITY_API_VERSION=3
    - TF_VAR_external_network_id="26f9344a-2e81-4ef5-a018-7d20cff891ee"
    - TF_VAR_floating_ip_pool="public"
    - TF_VAR_image_name="Ubuntu-16.04"
    - TF_VAR_master_flavor_name="standard.large"
    - TF_VAR_service_flavor_name="standard.large"
    - TF_VAR_edge_flavor_name="standard.large"
    - TF_VAR_ssh_user="cloud-user"
    # Local config (avoid showing information in travis log)
    - TF_VAR_write_kube_config_cluster=false
    - TF_VAR_write_cluster_yaml=false
    - secure: >
        yDuPdLNH8KUGXKCjznv55uzRydgJFRHEeyIwgFiu0voUEiwbN57S1+oP42DnlvmT/QQmyi
        h++AESTOG5yDqBvALIQwD7UkNY8/ULaYsDFjR8/8ApM/loqlvvyiOtswkCYJ/OENJXs665
        kqE2/Ik1S0cZoRIPn4AlT2+pSOeDhZYj5fImAURR5E5xWcYYM4IzPKcPMn61mAihPOFR71
        DQjZYd+MtnTi9aZyyIVI1nx4vWRWZFnTMsCtDHFcFktncbgIj4iBPmsJ9CBke2qcmf7pRu
        7eSAa+5G1mEaIOigEisx0do/n/xZa8V+dL1N2d7nhc27QwVHvaVNLRP2Ccf23GT4V/vjRL
        RBbuqn3TfVP5yxvCYHXMb2uEEsTbwUbvUBG5MLoram7QRYbjI98Pqfqve2dZq8IPC9l4IK
        AXc1Pm8qnKD8tlGEHFd+wt09Zf/tBTrz4A6WdYzXIYW6sPIfvo6fAq1jo0qZh7e6jS+l5B
        PeOe/DfEQ1uvjiIBOpKyWOOH3CZEW/jsbfbFIhWJmmAErPiF4g5G+yhZKS1VvTOI7HRKnH
        XhhGrnWKG3QbPc5erVvblsvjrQEwk1YlzJAfHL2Uhn6Id6kF0mGynSb62Z8el8iI0lH+14
        25lMilTXfITGIU/tQbmKpox0Nk1A1R2sFXDO29BxVxYpMbMtbMe0w=
  matrix:
    # Single master
    - >
      TF_VAR_cluster_prefix=rke-ci-$TRAVIS_BUILD_NUMBER
      TF_VAR_master_count=1
      TF_VAR_service_count=1
      TF_VAR_edge_count=1
    # HA
    - >
      TF_VAR_cluster_prefix=rke-ci-ha-$TRAVIS_BUILD_NUMBER
      TF_VAR_master_count=3
      TF_VAR_service_count=1
      TF_VAR_edge_count=1
    # IP for all nodes
    - >
      TF_VAR_cluster_prefix=rke-ci-ipall-$TRAVIS_BUILD_NUMBER
      TF_VAR_master_count=1
      TF_VAR_service_count=1
      TF_VAR_edge_count=1
      TF_VAR_master_assign_floating_ip=true
      TF_VAR_service_assign_floating_ip=true

install:
  # Install Terraform
  - >
    travis_retry curl -L
    "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
    -o /tmp/terraform.zip
  - sudo unzip /tmp/terraform.zip -d /usr/bin
  - sudo chmod +x /usr/bin/terraform
  # Install terraform-provider-rke
  - travis_retry curl -L
    "https://github.com/yamamoto-febc/terraform-provider-rke/releases/download/${TERRAFORM_PROVIDER_RKE_VERSION}/terraform-provider-rke_${TERRAFORM_PROVIDER_RKE_VERSION}_linux-amd64.zip"
    -o /tmp/teraform-provider-rke.zip
  - mkdir -p "$HOME/.terraform.d/plugins/"
  - unzip /tmp/teraform-provider-rke.zip -d $HOME/.terraform.d/plugins/
  # Install yamllint
  - sudo pip install yamllint==$YAMLLINT_VERSION
  # Configure SSH key
  - ssh-keygen -t rsa -N '' -f ssh_key
  - eval "$(ssh-agent -s)"
  - ssh-add ssh_key

before_script:
  # Terraform init, validate, and format check
  - terraform init
  - terraform validate
  - terraform fmt -check=true -diff
  # Check YAMLs
  - yamllint -c .yamllint.yml -s $(find . -type f -name '*.yml')

script:
  # Deploy
  - terraform apply -auto-approve # this also runs sanity checks
  # Scale up
  - export TF_VAR_service_count=$((TF_VAR_service_count+1))
  - export TF_VAR_service_edge=$((TF_VAR_edge_count+1))
  - terraform apply -auto-approve # this also runs sanity checks
  # Scale down
  - export TF_VAR_service_count=$((TF_VAR_service_count-1))
  - export TF_VAR_service_edge=$((TF_VAR_edge_count-1))
  - terraform apply -auto-approve # this also runs sanity checks

after_script:
  # Destroy
  - terraform destroy -force
